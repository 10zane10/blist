#!/bin/sh
# blister: play a list of songs, starting at a certain position, while still
# allowing for the playlist to be shuffled or repeated.

# Set IFS to new line so that songs with a space in them
# do not get broken into multiple songs
IFS="
"

# Play music using mplayer (and disable video).
player="mplayer
-novideo"

# Get the options
while getopts ":b:rs" opt ; do
	case "$opt" in
		b)
			startpos="$OPTARG"
			;;
		r)
			loop="-loop${IFS}0"
			;;
		s)
			shuffle="-shuffle"
			;;
		\?)
			echo "invalid option: -$OPTARG"
			exit 1
			;;
	esac
done
shift $(($OPTIND - 1))

# If the list of files is empty, give up. There is no point doing anything.
[ -z "$1" ] && exit 0

if [ -z $startpos ] ; then
	# No start position provided, do everything normally.
	exec $player $shuffle $loop $1
else
	# Check if the start position is valid.
	if [ $startpos -gt $(echo "$1" | wc -l) ] ; then
		echo "$startpos is larger then the length of the list"
		exit 0
	fi
	if [ -z "$shuffle" ] ; then
		if [ -z "$loop" ] ; then
			# Don't shuffle or loop, just $player the remaining
			# files in the list.
			exec $player $(echo "$1" | tail -n +$startpos)
		else
			# Loop only. Play the remaining part of the list,
			# then the remaining part, then loop.
			exec $player $loop $(echo "$1" | tail -n +$startpos) \
				$(echo "$1" | head -n $startpos)
		fi
	else
		# Play the file at the start position.
		$player $(echo "$1" | sed "$(($startpos))q;d")
		if [ -z "$loop" ] ; then
			exec $player $shuffle $(echo "$1" | tail -n +$(($startpos + 1)))
		else
			exec $player $shuffle $loop $1
		fi
	fi
fi
echo ===================
echo well shit
echo ==================
